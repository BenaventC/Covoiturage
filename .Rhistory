fit<-glm(formula = Nombre ~ Statut, family = "poisson", data = df)
summ(fit)
export_summs(fit)
effect_plot(fir, pred=Statut)
effect_plot(fit, pred=Statut)
effect_plot(fit, pred=Statut)
library(jtools)
fit<-lm(Nombre ~Statut, data=df)
anova(fit)
summary(fit)
summ(fit)
export_summs(fit)
effect_plot(fit, pred=Statut)
fit<-glm(formula = Nombre ~ Statut, family = "poisson", data = df)
summ(fit)
export_summs(fit)
effect_plot(fit, pred=Statut)
z<-var(Nombre)
z<-sd(Nombre)
#on remplace des valeurs manquante de la variable nombre de voyage par 0
df<- df %>%
mutate(Nombre=ifelse(is.na(Nombre),0,Nombre)) %>%
filter(!is.na(Statut))
# On calcule la moyenne et la mediane
x<-round(median(df$Nombre, na.rm = TRUE),2)
y<-round(mean(df$Nombre, na.rm = TRUE),2)
z<-sd(Nombre)
z<-sd(df$Nombre)
z
y
p <- ggplot(mtcars, aes(mpg, wt, shape = factor(cyl)))
p + geom_point(aes(colour = factor(cyl)), size = 4) +
geom_point(colour = "grey90", size = 1.5)
library(tidyverse) #on charge ggplot et dplyr nos outils de base
df <- read_delim("covoit.csv", ";", escape_double = FALSE,   trim_ws = TRUE) #je lis le fichier
ggplot(data = df, aes(x=Nombre))+
geom_histogram(fill="grey60")+
theme_bw()
ggplot(data = df, aes(x=Nombre))+
geom_histogram(fill="grey60", binwidth = 1)+
theme_bw()
df <- read_delim("covoit.csv", ";", escape_double = FALSE,   trim_ws = TRUE) #je lis le fichier
ggplot(data = df, aes(x=Nombre))+
geom_histogram(fill="grey60", binwidth = 1)+
theme_bw()
View(df)
View(df)
#on remplace des valeurs manquante de la variable nombre de voyage par 0
df<- df %>%
mutate(Nombre=ifelse(is.na(Nombre),0,Nombre))
ggplot(data = df, aes(x=Nombre))+
geom_histogram(fill="grey60", binwidth = 1)+
theme_bw()
ggplot(data = df, aes(x=Nombre))+
geom_histogram(fill="grey60", binwidth = 1)+
theme_bw()+xlim(-1,200)
ggplot(data = df, aes(x=Nombre))+
geom_histogram(fill="grey60", binwidth = 5)+
theme_bw()+xlim(-1,200)
ggplot(data = df, aes(x=Nombre))+
geom_histogram(fill="grey60", binwidth = 5)+
theme_bw()+
xlim(-1,200) +
labs(title="Distribution de l'expérience des offreurs",
subtitle=paste0("Moyenne: ",y, ". Mediane: ",x, " Ecart-type:", z),
caption="Source : scrapping covoiturage ",
x= "Nombre de voyages déjà proposés par l'offreur",y="Fréquence")+
geom_vline(xintercept = y, size=1, color="blue")+
#on remplace des valeurs manquante de la variable nombre de voyage par 0
df<- df %>%
mutate(Nombre=ifelse(is.na(Nombre),0,Nombre))
#on remplace des valeurs manquante de la variable nombre de voyage par 0
df<- df %>%
mutate(Nombre=ifelse(is.na(Nombre),0,Nombre))
# On calcule la moyenne et la mediane
x<-round(median(df$Nombre, na.rm = TRUE),2)
y<-round(mean(df$Nombre, na.rm = TRUE),2)
z<-sd(df$Nombre)
ggplot(data = df, aes(x=Nombre))+
geom_histogram(fill="grey60", binwidth = 5)+
theme_bw()+
xlim(-1,200) +
labs(title="Distribution de l'expérience des offreurs",
subtitle=paste0("Moyenne: ",y, ". Mediane: ",x, " Ecart-type:", z),
caption="Source : scrapping covoiturage ",
x= "Nombre de voyages déjà proposés par l'offreur",y="Fréquence")+
geom_vline(xintercept = y, size=1, color="blue")+
ggplot(data = df, aes(x=Nombre))+
geom_histogram(fill="grey60", binwidth = 5)+
theme_bw()+
xlim(-1,200) +
labs(title="Distribution de l'expérience des offreurs",
subtitle=paste0("Moyenne: ",y, ". Mediane: ",x, " Ecart-type:", z),
caption="Source : scrapping covoiturage ",
x= "Nombre de voyages déjà proposés par l'offreur",y="Fréquence")+
geom_vline(xintercept = y, size=1, color="blue")+
g<-ggplot(data = df, aes(x=Nombre))+
geom_histogram(fill="grey60", binwidth = 5)+
theme_bw()+
xlim(-1,200) +
labs(title="Distribution de l'expérience des offreurs",
subtitle=paste0("Moyenne: ",y, ". Mediane: ",x, " Ecart-type:", z),
caption="Source : scrapping covoiturage ",
x= "Nombre de voyages déjà proposés par l'offreur",y="Fréquence")+
geom_vline(xintercept = y, size=1, color="blue")+
ggplot(data = df, aes(x=Nombre))+
geom_histogram(fill="grey60", binwidth = 5)+
theme_bw()+
xlim(-1,200) +
labs(title="Distribution de l'expérience des offreurs",
subtitle=paste0("Moyenne: ",y, ". Mediane: ",x, " Ecart-type:", z),
caption="Source : scrapping covoiturage ",
x= "Nombre de voyages déjà proposés par l'offreur",y="Fréquence")+
geom_vline(xintercept = y, size=1, color="blue")
#on remplace des valeurs manquante de la variable nombre de voyage par 0
df<- df %>%
mutate(Nombre=ifelse(is.na(Nombre),0,Nombre))
#%>%   filter(!is.na(Statut))
# On calcule la moyenne et la mediane
x<-round(median(df$Nombre, na.rm = TRUE),2)
y<-round(mean(df$Nombre, na.rm = TRUE),2)
z<-sd(df$Nombre)
ggplot(data = df, aes(x=Nombre))+
geom_histogram(fill="grey60", binwidth = 5)+
theme_bw()+
xlim(-1,200) +
labs(title="Distribution de l'expérience des offreurs",
subtitle=paste0("Moyenne: ",y, ". Mediane: ",x, " Ecart-type:", z),
caption="Source : scrapping covoiturage ",
x= "Nombre de voyages déjà proposés par l'offreur",y="Fréquence")+
geom_vline(xintercept = y, size=1, color="blue")
ggplot(data = df, aes(x=Nombre))+
geom_histogram(fill="grey60", binwidth = 5)+
theme_bw()+
xlim(-1,200) +
labs(title="Distribution de l'expérience des offreurs",
subtitle=paste0("Moyenne: ",y, ". Mediane: ",x, " Ecart-type:", z),
caption="Source : scrapping covoiturage ",
x= "Nombre de voyages déjà proposés par l'offreur",y="Fréquence")+
geom_vline(xintercept = y, size=1, color="red")
z<-round(sd(df$Nombre),2)
ggplot(data = df, aes(x=Nombre))+
geom_histogram(fill="grey60", binwidth = 5)+
theme_bw()+
xlim(-1,200) +
labs(title="Distribution de l'expérience des offreurs",
subtitle=paste0("Moyenne: ",y, ". Mediane: ",x, " Ecart-type:", z),
caption="Source : scrapping covoiturage ",
x= "Nombre de voyages déjà proposés par l'offreur",y="Fréquence")+
geom_vline(xintercept = y, size=1, color="red")
ggplot(data = df, aes(x=Nombre))+
geom_histogram(fill="grey60", binwidth = 5)+
theme_bw()+
xlim(-1,200) +
labs(title="Distribution de l'expérience des offreurs",
subtitle=paste0("Moyenne: ",y, ". Mediane: ",x, " Ecart-type:", z),
caption="Source : scrapping covoiturage ",
x= "Nombre de voyages déjà proposés par l'offreur",y="Fréquence")+
geom_vline(xintercept = x, size=1, color="red")
ggplot(data = df, aes(x=Nombre))+
geom_histogram(fill="grey60", binwidth = 5)+
theme_bw()+
xlim(-1,20000) +
labs(title="Distribution de l'expérience des offreurs",
subtitle=paste0("Moyenne: ",y, ". Mediane: ",x, " Ecart-type:", z),
caption="Source : scrapping covoiturage ",
x= "Nombre de voyages déjà proposés par l'offreur",y="Fréquence")+
geom_vline(xintercept = x, size=1, color="red")+scale_x_log10()
ggplot(data = df, aes(x=Nombre))+
geom_histogram(fill="grey60")+
theme_bw()+
xlim(-1,20000) +
labs(title="Distribution de l'expérience des offreurs",
subtitle=paste0("Moyenne: ",y, ". Mediane: ",x, " Ecart-type:", z),
caption="Source : scrapping covoiturage ",
x= "Nombre de voyages déjà proposés par l'offreur",y="Fréquence")+
geom_vline(xintercept = x, size=1, color="red")+scale_x_log10()
ggplot(data = df, aes(x=Nombre+1))+
geom_histogram(fill="grey60")+
theme_bw()+
xlim(-1,20000) +
labs(title="Distribution de l'expérience des offreurs",
subtitle=paste0("Moyenne: ",y, ". Mediane: ",x, " Ecart-type:", z),
caption="Source : scrapping covoiturage ",
x= "Nombre de voyages déjà proposés par l'offreur",y="Fréquence")+
geom_vline(xintercept = x, size=1, color="red")+scale_x_log10()
ggplot(data = df, aes(x=Nombre+1))+
geom_histogram(fill="grey60")+
theme_bw()+
xlim(-1,200) +
labs(title="Distribution de l'expérience des offreurs",
subtitle=paste0("Moyenne: ",y, ". Mediane: ",x, " Ecart-type:", z),
caption="Source : scrapping covoiturage ",
x= "Nombre de voyages déjà proposés par l'offreur",y="Fréquence")+
geom_vline(xintercept = x, size=1, color="red")
ggsave("mon1ggplot.jpeg",plot=last_plot(),width = 18, height = 14, units = "cm")
ggplot(df,aes(x=Statut))+
geom_bar(fill="gold3")+
theme_bw()+
labs(title="Répartition des offres par statut du conducteur",y="proportion")
ggplot(df,aes(x=Statut))+
geom_bar(fill="gold3")+
theme_bw()+  coord_flip()+
labs(title="Répartition des offres par statut du conducteur",y="proportion")
ggplot(df,aes(x=Statut))+
geom_bar(fill="gold3", aes(y = (..count..)/sum(..count..)))+
theme_bw()+  coord_flip()+
labs(title="Répartition des offres par statut du conducteur",y="proportion")
ggplot(df,aes(x=Statut,y=Nombre+1))+
geom_boxplot(fill="gold3")+
coord_flip()+
theme_bw()+
scale_y_log10()+
scale_y_continuous(labels=scales::percent)
ggplot(df,aes(x=Statut))+
geom_bar(fill="gold3", aes(y = (..count..)/sum(..count..)))+
theme_bw()+  coord_flip()+
labs(title="Répartition des offres par statut du conducteur",y="proportion")+
scale_y_continuous(labels=scales::percent)
#on remplace des valeurs manquante de la variable nombre de voyage par 0
df<- df %>%
mutate(Nombre=ifelse(is.na(Nombre),0,Nombre)) %>% filter(!is.na(Statut))
#On calcule la moyenne et la mediane
x<-round(median(df$Nombre, na.rm = TRUE),2)
y<-round(mean(df$Nombre, na.rm = TRUE),2)
z<-round(sd(df$Nombre),2)
ggplot(data = df, aes(x=Nombre+1))+
geom_histogram(fill="grey60")+
theme_bw()+
xlim(-1,200) +
labs(title="Distribution de l'expérience des offreurs",
subtitle=paste0("Moyenne: ",y, ". Mediane: ",x, " Ecart-type:", z),
caption="Source : scrapping covoiturage ",
x= "Nombre de voyages déjà proposés par l'offreur",y="Fréquence")+
geom_vline(xintercept = x, size=1, color="red")
ggplot(df,aes(x=Statut))+
geom_bar(fill="gold3", aes(y = (..count..)/sum(..count..)))+
theme_bw()+  coord_flip()+
labs(title="Répartition des offres par statut du conducteur",y="proportion")+
scale_y_continuous(labels=scales::percent)
ggplot(df,aes(x=Statut,y=Nombre+1))+
geom_boxplot(fill="gold3")+
coord_flip()+
theme_bw()+
scale_y_log10()
foo <-df %>%
group_by(Statut)%>%
summarise(Voyage_mean=mean(Nombre),
Voyage_sd=sd(Nombre),
n=n()) %>%
filter(!is.na(Statut))
View(foo)
View(foo)
ggplot(foo,aes(x=reorder(Statut,Voyage_mean), y=Voyage_mean))+
geom_bar(stat="identity", fill="firebrick3")+
geom_errorbar(aes(ymin=Voyage_mean-2*Voyage_sd/sqrt(n), ymax=Voyage_mean+2*Voyage_sd/sqrt(n)),size=1, width=.3,position=position_dodge(.9))+
labs(title="Nombre moyen de voyages par statut",
caption="source: blablacar scrapping 2017",
x= "Statut",y="Nombre moyen de voyages")+
coord_flip()+
theme_bw()
ggsave("mon2ggplot.jpeg",plot=last_plot(),width = 18, height = 14, units = "cm")
foo <-df %>%
group_by(Statut)%>%
summarise(Voyage_mean=mean(Nombre),
Voyage_sd=sd(Nombre),
n=n()) %>%
filter(!is.na(Statut))
ggplot(foo,aes(x=reorder(Statut,Voyage_mean), y=Voyage_mean))+
geom_bar(stat="identity", fill="firebrick3")+
geom_errorbar(aes(ymin=Voyage_mean-2*Voyage_sd/sqrt(n), ymax=Voyage_mean+2*Voyage_sd/sqrt(n)),size=1, width=.3,position=position_dodge(.9))+
labs(title="Nombre moyen de voyages par statut",
caption="source: blablacar scrapping 2017",
x= "Statut",y="Nombre moyen de voyages")+
coord_flip()+
theme_bw()
ggsave("mon2ggplot.jpeg",plot=last_plot(),width = 18, height = 14, units = "cm")
knitr::opts_chunk$set(echo = TRUE,message=FALSE, warning=FALSE)
library(tidyverse) #on charge ggplot et dplyr nos outils de base
library(jtools) # pour avoir des graph des modeles de régression
df <- read_delim("covoit.csv", ";", escape_double = FALSE,   trim_ws = TRUE) #je lis le fichier
fit<-lm(Nombre ~Statut, data=df)
View(fit)
View(fit)
anova(fit)
summary(fit)
fit<-lm(Nombre ~Statut+Note, data=df)
anova(fit)
summary(fit)
summ(fit)
export_summs(fit)
effect_plot(fit, pred=Statut)
plot_summs(fit, robust = "HC3")
fit<-glm(formula = Nombre ~ Statut, family = "poisson", data = df)
summ(fit)
export_summs(fit)
effect_plot(fit, pred=Statut)
knitr::opts_chunk$set(echo = TRUE,include=TRUE, echo=TRUE, message=FALSE, warning=FALSE)
library(readr)
library(tidyverse)
library(reshape2)
library(gridExtra)
library(lme4)
library(jtools)
library(interactions)
df <- read_delim("covoit.csv", ";", escape_double = FALSE, trim_ws = TRUE)
df<- df%>% rename(TauxOccup=`Places Restantes`,
Depart=`Ville Depart Capture`,
Arrivee=`Ville Arrivee Capture`,
Flex=`Flexibilite Horaire`
)
df<-df %>% filter( Distance<1000)
#on recode les places restantes par une approximation du taux de réservation
df$Occup<- NA
df$Occup[df$TauxOccup==0]<-1
df$Occup[df$TauxOccup==1]<-.75
df$Occup[df$TauxOccup==2]<-.50
df$Occup[df$TauxOccup==3]<-.25
df$Occup[df$TauxOccup==4]<-0
df$Occup[df$TauxOccup>=4]<-0
#l'expérience peut se capter par le nombre de voyages
df$Nombre[is.na(df$Nombre)]<-0
trajet<-table(df$Depart, df$Arrivee)
df$trajet<-paste0(df$Depart,"-",df$Arrivee)
foo<-df %>% mutate(n=1)%>%group_by(trajet)%>%summarise(n=sum(n))%>%filter(n>0)
ggplot(foo,aes(x=reorder(trajet,n), y=n))+geom_bar(stat="identity", fill="coral1")+coord_flip()+theme_bw()+labs(title="Trajets les plus fréquents")
ggplot(df, aes(x=Distance))+geom_histogram(fill="Chartreuse4",binwidth = 20)+theme_bw() +labs(title = "Distribution de la distance des trajets")
# ggplot(df, aes(x=Marque))+geom_bar(fill="Chartreuse4")+theme_bw() +coord_flip()
g2<-ggplot(df, aes(x=Age))+geom_histogram(fill="Chartreuse4")+theme_bw() +scale_x_log10() +labs(title="Distribution de l'âge")
df$Age2<-(round(df$Age/10,0))
foo<-df %>% group_by(Age2)%>%summarise(Note=mean(Note, na.rm=TRUE)) %>% filter(Age2<9)
g3<-ggplot(foo, aes(x=Age2, y=Note, group=1))+geom_line(stat="identity",color="Chartreuse4",size =2)+theme_bw()+labs(title="Note en fonction de l'âge")
grid.arrange(g2,g3,ncol=2)
fit<-lm(Note~Age2, df)
anova(fit)
df$Flex[df$Flex!="Depart pile a l'heure" & df$Flex!="Pas d'indication"]<-"Voir avec le conducteur"
df$Flex[is.na(df$Flex)]<-"Pas d'indication"
ggplot(df, aes(x=Flex))+geom_bar(fill="Chartreuse4")+theme_bw() +coord_flip()+labs(title="Flexibilité de l'horaire")
df$Detour[df$Detour=="De 30 minutes max"]<-"Plus de 15 mn"
df$Detour[df$Detour=="Autant que possible"]<-"Plus de 15 mn"
ggplot(df, aes(x=Detour))+geom_bar(fill="Chartreuse4")+theme_bw()  +coord_flip()+labs(title="Acceptation des détours")
df$Statut<-as.factor(df$Statut)
ggplot(df, aes(x=Statut))+
geom_bar(fill="Chartreuse4")+theme_bw() +
coord_flip()+
labs(title = "Statuts de conducteur")
foo<-df %>% group_by(Statut)%>%summarise(Note=mean(Note,na.rm=TRUE),Nombre=mean(Nombre,na.rm=TRUE))
foo<-melt(foo)
ggplot(foo, aes(x=Statut, y=value,group=variable))+geom_line(aes(color=variable), size=2)+
theme_bw() +
coord_flip()+facet_wrap(vars(variable),scales ="free")+  labs(title = "Profil des  statuts de conducteur")+scale_color_manual(values=c("coral1", "skyblue3"))+ guides(color = FALSE, size = FALSE)
mean<-round(mean(df$Note,na.rm=TRUE),2)
ggplot(df, aes(x=Note))+geom_histogram(fill="coral2",binwidth = .1)+
theme_bw() +
labs(title = "Distribution des notes des conducteurs", subtitle =paste0("Moyenne=", mean))
mean<-round(mean(df$Nombre,na.rm=TRUE),2)
ggplot(df, aes(x=Nombre))+geom_histogram(fill="skyblue1", binwidth = 5)+theme_bw()+labs(title = "Distribution du nombre de trajets réalisés", subtitle =paste0("Moyenne=", mean))+xlim(0,300)
ggplot(df, aes(x=Nombre, y=Note))+geom_point(color="Chartreuse3",alpha=0.3)+theme_bw() +geom_smooth()+xlim(0,500)+labs(title="Corrélation nombre de trajets et note moyenne du conducteur")
ggplot(df, aes(x=Occup))+geom_bar(fill="gold2")+theme_bw()  +labs(title="Distribution des taux d'occupation")
fit0<-lm(Occup~Age+Distance+Prix+Flex+Detour+Autoroute+Statut+log(Nombre+1)+Note, data=df)
summ(fit0)
fit1<-lm(Occup~Age+Statut+Distance+Prix+Autoroute+log(Nombre+1)+Note:log(Nombre+1), data=df)
summ(fit1)
plot_summs(fit0,fit1, plot.distributions = TRUE,scale = FALSE)
g10<-effect_plot(fit1, pred=Age,interval = TRUE ,data=df)+geom_line(color="gold3",size=2)+labs(title="Effet de l'âge sur le taux d'occupation")
g11<-effect_plot(fit1, pred=Statut,interval = TRUE ,data=df)+geom_line(color="gold3",size=2)+labs(title="Effet de l'âge sur le taux d'occupation")
g12<-effect_plot(fit1, pred=Autoroute,interval = TRUE  ,data=df)+geom_line(color="gold3",size=2)+labs(title="Effet de l'autoroute sur le taux d'occupation")
g13<-effect_plot(fit1, pred=Distance,interval = TRUE  ,data=df)+geom_line(color="gold3",size=2)+labs(title="Effet de la distance sur le taux d'occupation")
grid.arrange(g10,g11,g12,g13,ncol=2)
g14<-effect_plot(fit1, pred=Note,interval = TRUE ,data=df)+geom_line(color="gold3",size=2)+labs(title="Effet de la note sur le taux d'occupation")
g15<-effect_plot(fit1, pred=Nombre,interval = TRUE  ,data=df)+geom_line(color="gold3",size=2)+labs(title="Effet du nombre de trajets sur le taux d'occupation")
grid.arrange(g14,g15,ncol=2)
library(interactions)
interact_plot(fit1,pred =Nombre , modx =Note ,interval = TRUE ,data=df) +scale_x_log10()+geom_line(color="gold3",size=2)+labs(title="Interaction Note X Nombre")
fit2<-glmer(Occup~Age+Statut+Distance+Prix+Autoroute+log(Nombre+1)+Note:log(Nombre+1)+(1|trajet),family = binomial, data=df)
summ(fit2)
g16a<-effect_plot(fit2, pred=Age,interval = TRUE  ,data=df)+geom_line(color="gold3",size=2)+labs(title="Effet de l'âge du conducteur",y="taux d'occupation" )
g16b<-effect_plot(fit2, pred=Statut,interval = TRUE  ,data=df)+geom_line(color="gold3",size=2)+labs(title="Effet du statut du conducteur",y="taux d'occupation")
g16<-effect_plot(fit2, pred=Prix,interval = TRUE  ,data=df)+geom_line(color="gold3",size=2)+labs(title="Effet du prix",y="taux d'occupation")
g17<-effect_plot(fit2, pred=Distance,interval = TRUE  ,data=df)+geom_line(color="gold3",size=2)+labs(title="Effet de la distance du trajet",y="taux d'occupation")
grid.arrange(g16a,g16b,g16,g17,ncol=2)
g18<-effect_plot(fit2, pred=Note,interval = TRUE  ,data=df)+geom_line(color="gold3",size=2)+labs(title="Effet de la note",y="taux d'occupation")
g19<-effect_plot(fit2, pred=Nombre,interval = TRUE ,data=df)+geom_line(color="gold3", size=2)+labs(title="Effet du nombre de trajets",y="taux d'occupation")
grid.arrange(g18,g19,ncol=2)
g20<-interact_plot(fit2,pred =Nombre , modx =Note ,interval = TRUE ,data=df) +scale_x_log10()+geom_line(color="gold3", size=2)+labs(title="Effets d'interaction Nombre X Note",y="taux d'occupation")
g20
g20<-ggplot(df, aes(x=Prix))+geom_bar(fill="firebrick2")+theme_bw()  +labs(title = "Distribution des prix")
g21<-ggplot(df, aes(x=Distance, y=Prix))+geom_point(color="firebrick2", alpha =0.5)+theme_bw() +geom_smooth(method="gam")+scale_x_log10()+labs(title = "Corrélation des distances et des prix")
library(gridExtra)
grid.arrange(g20,g21, ncol=2)
df$prix_km<-df$Prix/df$Distance
g22<-ggplot(df, aes(x=prix_km))+geom_histogram(fill="firebrick3", binwidth = 0.005)+theme_bw()  +labs(title = "Distribution des prix")+xlim(0,0.15)
g23<-ggplot(df, aes(x=Distance, y=prix_km))+geom_point(color="firebrick3")+theme_bw() +geom_smooth(method="gam")+scale_x_log10()+ylim(0,0.15)
grid.arrange(g22,g23, ncol=2)
fit3<-lm(prix_km~Age+Distance+Autoroute+log(Nombre+1)+Note, data=df)
summ(fit3)
plot_summs(fit3,  plot.distributions = TRUE,scale = FALSE)
g24<-effect_plot(fit3, pred=Age,interval = TRUE ,data=df)+geom_line(color="firebrick",size=2)+labs(title="Effet de l'âge sur le prix")
g25<-effect_plot(fit3, pred=Distance,interval = TRUE ,data=df)+geom_line(color="firebrick",size=2)+labs(title="Effet de la distance sur le prix")
g27<-effect_plot(fit3, pred=Autoroute,interval = TRUE ,data=df)+geom_line(color="firebrick",size=2)+labs(title="Effet de l'autoroute sur le prix")
g26<-effect_plot(fit3, pred=Note,interval = TRUE ,data=df)+geom_line(color="firebrick",size=2)+labs(title="Effet de la note sur le prix")
g28<-effect_plot(fit3, pred=Nombre,interval = TRUE ,data=df)+geom_line(color="firebrick",size=2)+labs(title="Effet du nombre de trajets")
g29<-interact_plot(fit3,pred =Nombre , modx =Note ,interval = TRUE ,data=df) +scale_x_log10()+geom_line(color="firebrick",size=2)+labs(title="Interaction nombre X Note")
grid.arrange(g24,g25,g27, ncol=2)
grid.arrange(g26,g28, ncol=2)
g29
fit4<-lmer(prix_km~Distance+Autoroute+Age+Note+log(Nombre+1):Note+(1|trajet), data=df)
summary(fit4)
interact_plot(fit4,pred =Note , modx =Nombre ,interval = TRUE ,data=df) +scale_x_log10()+geom_line(color="firebrick",size=2)+labs(title="Interaction  du nombre X note")
models <- df %>% group_by(Statut) %>% summarise(mod = list(lm(Occup~Age+Distance+Autoroute+Prix+log(Nombre+1)+Note:log(Nombre+1))))
coef5<-as.data.frame(models$mod[[1]]$coefficients)%>%add_rownames()%>%mutate(Statut="Ambassadeur")%>% rename(coef=2)
coef1<-as.data.frame(models$mod[[2]]$coefficients)%>%add_rownames()%>% mutate(Statut="Confirmé")%>% rename(coef=2)
coef2<-as.data.frame(models$mod[[3]]$coefficients)%>%add_rownames()%>%mutate(Statut="Expert")%>% rename(coef=2)
coef3<-as.data.frame(models$mod[[4]]$coefficients)%>%add_rownames()%>%mutate(Statut="Habitué")%>% rename(coef=2)
coef4<-as.data.frame(models$mod[[5]]$coefficients)%>%add_rownames()%>%mutate(Statut="Pas de Statut")%>% rename(coef=2)
coef<-rbind(coef1, coef2, coef3, coef4, coef5) %>% filter(rowname!="(Intercept)")
coef$Statut <- factor(coef$Statut, levels = c("Pas de Statut", "Habitué", "Confirmé", "Expert", "Ambassadeur"))
ggplot(coef, aes(x=Statut,y=coef,group=rowname))+geom_line(aes(color=rowname), size=1.3)+theme_bw()+labs(title="Coefficients des variables par statut",subtitle = "Taux d'occupation du véhicule")
models <- df %>% group_by(Statut) %>% summarise(mod = list(lm(prix_km~Distance+Autoroute+Age+Note+log(Nombre+1):Note)))
coef5<-as.data.frame(models$mod[[1]]$coefficients)%>%add_rownames()%>%mutate(Statut="Ambassadeur")%>% rename(coef=2)
coef1<-as.data.frame(models$mod[[2]]$coefficients)%>%add_rownames()%>% mutate(Statut="Confirmé")%>% rename(coef=2)
coef2<-as.data.frame(models$mod[[3]]$coefficients)%>%add_rownames()%>%mutate(Statut="Expert")%>% rename(coef=2)
coef3<-as.data.frame(models$mod[[4]]$coefficients)%>%add_rownames()%>%mutate(Statut="Habitué")%>% rename(coef=2)
coef4<-as.data.frame(models$mod[[5]]$coefficients)%>%add_rownames()%>%mutate(Statut="Pas de Statut")%>% rename(coef=2)
coef<-rbind(coef1, coef2, coef3, coef4, coef5) %>% filter(rowname!="(Intercept)")
coef$Statut <- factor(coef$Statut, levels = c("Pas de Statut", "Habitué", "Confirmé", "Expert", "Ambassadeur"))
ggplot(coef, aes(x=Statut,y=coef,group=rowname))+geom_line(aes(color=rowname), size=1.3)+theme_bw()+labs(title="Coefficients des variables par statut",subtitle = "Prix au km")
knitr::opts_chunk$set(echo = TRUE,include=TRUE, echo=TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
library(reshape2)
library(gridExtra)
library(lme4)
library(jtools)
library(interactions)
g2<-ggplot(df, aes(x=Age))+geom_histogram(fill="Chartreuse4")+theme_bw() +scale_x_log10() +labs(title="Distribution de l'âge")
foo<-df %>% group_by(Age2)%>%summarise(Note=mean(Note, na.rm=TRUE)) %>% filter(Age2<9)
foo<-df %>% group_by(Age2)%>%
summarise(Note=mean(Note, na.rm=TRUE)) %>%
filter(Age2<9)
View(foo)
View(foo)
g3<-ggplot(foo, aes(x=Age2, y=Note, group=1))+
geom_line(stat="identity",color="Chartreuse4",size =2)+
theme_bw()+
labs(title="Note en fonction de l'âge")
```{r age1}
g2<-ggplot(df, aes(x=Age))+
geom_histogram(fill="Chartreuse4")+theme_bw() +
scale_x_log10() +labs(title="Distribution de l'âge")
df$Age2<-(round(df$Age/10,0))
foo<-df %>% group_by(Age2)%>%
summarise(Note=mean(Note, na.rm=TRUE)) %>%
filter(Age2<9)
g3<-ggplot(foo, aes(x=Age2, y=Note, group=1))+
geom_line(stat="identity",color="Chartreuse4",size =2)+
theme_bw()+
labs(title="Note en fonction de l'âge")
grid.arrange(g2,g3,ncol=2)
fit<-lm(Note~Age2, df)
anova(fit)
foo<-df %>%
group_by(Statut)%>%
summarise(Note=mean(Note,na.rm=TRUE),Nombre=mean(Nombre,na.rm=TRUE))
foo<-melt(foo)
View(foo)
View(foo)
foo<-df %>%
group_by(Statut)%>%
summarise(Note=mean(Note,na.rm=TRUE),Nombre=mean(Nombre,na.rm=TRUE))
View(foo)
foo<-df %>%
group_by(Statut)%>%
summarise(Note=mean(Note,na.rm=TRUE),Nombre=mean(Nombre,na.rm=TRUE))
View(foo)
foo<-melt(foo)
View(foo)
knitr::opts_chunk$set(echo = TRUE,include=TRUE, echo=TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
library(reshape2) #manipuler les fichiers
library(gridExtra)
library(lme4)
library(jtools)
library(interactions)
ggplot(foo, aes(x=Statut, y=value,group=variable))+
geom_line(aes(color=variable), size=2)+
theme_bw() +
coord_flip()+
facet_wrap(vars(variable),scales ="free")+
labs(title = "Profil des  statuts de conducteur")+scale_color_manual(values=c("coral1", "skyblue3"))+ guides(color = FALSE, size = FALSE)
ggplot(foo, aes(x=Statut, y=value,group=variable))+
geom_line(aes(color=variable), size=2)+
theme_bw() +
coord_flip()+
facet_wrap(vars(variable),scales ="free")+
labs(title = "Profil des  statuts de conducteur")+scale_color_manual(values=c("coral1", "skyblue3"))
ggplot(foo, aes(x=Statut, y=value,group=variable))+
geom_line(aes(color=variable), size=2)+
theme_bw() +
coord_flip()+
facet_wrap(vars(variable),scales ="free")+
labs(title = "Profil des  statuts de conducteur")+scale_color_manual(values=c("coral1", "skyblue3"))+ guides(color = FALSE, size = FALSE)
ggplot(foo, aes(x=Statut, y=value,group=variable))+
geom_line(aes(color=variable), size=2)+
theme_bw() +
coord_flip()+
facet_wrap(vars(variable),scales ="free")+
labs(title = "Profil des  statuts de conducteur")+scale_color_manual(values=c("coral1", "skyblue3"))
fit0<-lm(Occup~Age+Distance+Prix+Flex+Detour+Autoroute+Statut+log(Nombre+1)+Note, data=df)
summ(fit0)
fit1<-lm(Occup~Age+Distance+Prix+Flex+Detour+Autoroute+Statut+log(Nombre+1)+Note:log(Nombre+1), data=df)
summ(fit1)
plot_summs(fit0,fit1, plot.distributions = TRUE,scale = FALSE)
